--SQL REATAIL SALES ANALYSIS - PROJECT 

CREATE DATABASE SQLPROJECT

-- CREATE TABLE--

CREATE TABLE RETAIL_SALES (TRANSACTIONS_ID INT,	SALE_DATE DATE,	SALE_TIME TIME, CUSTOMER_ID INT, GENDER VARCHAR (10), AGE INT, CATEGORY VARCHAR (50), 
QUANTIY INT, PRICE_PER_UNIT FLOAT, COGS FLOAT, TOTAL_SALE FLOAT)

SELECT * FROM RETAIL_SALES


--DATA CLEANINIG--

SELECT COUNT (*) FROM RETAIL_SALES

SELECT * FROM RETAIL_SALES WHERE TRANSACTIONS_ID IS NULL OR
SALE_DATE IS NULL OR SALE_TIME IS NULL OR CUSTOMER_ID IS NULL OR GENDER IS NULL OR CATEGORY IS NULL OR QUANTIY IS NULL OR 
PRICE_PER_UNIT IS NULL OR COGS IS NULL OR TOTAL_SALE IS NULL;

DELETE FROM RETAIL_SALES WHERE TRANSACTIONS_ID IS NULL OR
SALE_DATE IS NULL OR SALE_TIME IS NULL OR CUSTOMER_ID IS NULL OR GENDER IS NULL OR CATEGORY IS NULL OR QUANTIY IS NULL OR 
PRICE_PER_UNIT IS NULL OR COGS IS NULL OR TOTAL_SALE IS NULL;

-- DATA EXPLORATION -- 

1. --WRITE A SQL QUERY TO RETRIEVE ALL COLUMNS FOR SALES MADE ON '2022-11-05:
--ANS--
      SELECT * FROM RETAIL_SALES WHERE SALE_DATE = '2022-11-05'
 
2. --WRITE A SQL QUERY TO RETRIEVE ALL TRANSACTIONS WHERE THE CATEGORY IS 'CLOTHING' AND THE QUANTITY SOLD IS MORE THAN 4 IN THE MONTH OF NOV-2022:
 --ANS--
     SELECT * FROM RETAIL_SALES WHERE CATEGORY = 'CLOTHING' AND SALE_DATE = '2022-11' AND QUANTIY >= 4 

3--WRITE A QUERY TO CALCULATE THE TOTAL SALES (TOTAL_SALE) FOR EACH CATEGORY.:
--ANS-- 
     SELECT CATEGORY, SUM(TOTAL_SALE) AS NET_SALE, COUNT (*) AS TOTALORDERS FROM RETAIL_SALES GROUP BY CATEGORY

4.--WRITE A QUERY TO FIND THE AVERAGE AGE OF CUSTOMERS WHO PURCHASED ITEMS FROM THE 'BEAUTY' CATEGORY:
--ANS--
     SELECT AVG(AGE) AS AVG_AGE FROM RETAIL_SALES WHERE CATEGORY = 'BEAUTY'

5.-- WRITE A SQL QUERY TO FIND ALL TRANSACTIONS WHERE THE TOTAL_SALE IS GREATER THAN 1000:
--ANS-- 
     SELECT * FROM RETAIL_SALES WHERE TOTAL_SALE > '1000';

6. -- WRITE A SQL QUERY TO FIND THE TOTAL NUMBER OF TRANSACTIONS (TRANSACTION_ID) MADE BY EACH GENDER IN EACH CATEGORY:
--ANS--
     SELECT CATEGORY, GENDER, COUNT (*) AS TOTAL_TRANS FROM RETAIL_SALES GROUP BY CATEGORY, GENDER ORDER BY 1

7.-- WRITE A SQL QUERY TO FIND THE TOP 5 CUSTOMERS BASED ON THE HIGHEST TOTAL SALES: 
--ANS-- 
    SELECT TOP 5 CUSTOMER_ID, SUM (TOTAL_SALE) AS TOTAL_SALES FROM RETAIL_SALES GROUP BY CUSTOMER_ID ORDER BY 2 DESC 

8.-- WRITE A SQL QUERY TO FIND THE NUMBER OF UNIQUE CUSTOMERS WHO PURCHASED ITEMS FROM EACH CATEGORY:
--ANS--
    SELECT CATEGORY, COUNT(DISTINCT CUSTOMER_ID) AS CNT_UNIQUE_CS FROM RETAIL_SALES GROUP BY CATEGORY 

9.-- WRITE A SQL QUERY TO CREATE EACH SHIFT AND NUMBER OF ORDERS (EXAMPLE MORNING <12, AFTERNOON BETWEEN 12 & 17, EVENING >17):
--ANS--
WITH HOURLY_SALE AS (SELECT *, CASE WHEN EXTRACT(HOUR FROM SALE_TIME) < 12 THEN'MORNING' WHEN EXTRACT (HOUR FROM SALE_TIME) BETWEEN 12 AND 17 THEN 'AFTERNOON'
ELSE 'EVENING' END AS SHIFT FROM RETAIL_SALES)
SELECT SHIFT, COUNT(*) AS TOTAL_ORDERS FROM HOURLY_SALE GROUP BY SHIFT 
   
10-- A SQL QUERY TO CALCULATE THE AVERAGE SALE FOR EACH MONTH. FIND OUT BEST SELLING MONTH IN EACH YEAR:
--ANS--
    SELECT YEAR, MONTH, AVG_SALE FROM (SELECT EXTRACT(YEAR FROM SALE_DATE) AS YEAR, EXTRACT (MONTH FROM SALE_DATE) AS MONTH, AVG(TOTAL_SALE) AS AVG_SALE,
    RANK() OVER(PARTITION BY EXTRACT(YEAR FROM SALE_DATE) ORDER BY AVG(TOTAL_SALE) DESC) AS RANK FROM RETAIL_SALES GROUP BY SALE_DATE, SALE_TIME) AS T1 WHERE RANK = 1
  
  
-----------------------------------------------------------------END OF PROJECT-----------------------------------------------------------------------------------
   
   
   